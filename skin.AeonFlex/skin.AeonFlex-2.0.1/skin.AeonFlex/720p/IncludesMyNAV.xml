<?xml version="1.0" encoding="UTF-8"?>
<includes>
<!-- ####Hidden controls ####-->
<!-- video -->
<include name="viewglobal_video_hiddencontrols">
	<!-- Flags HiddenCondition Studio -->
	<control type="image" id="557">
		<include>Hiddencontrol</include>
		<texture fallback="leer.png">resource://resource.images.studios.coloured/$INFO[ListItem.Studio,,.png]</texture><!-- jarvis -->
	</control>
	<!-- Flags HiddenCondition mpaa -->
	<control type="image" id="558">
		<include>Hiddencontrol</include>
		<texture>$VAR[flags_value_mpaa]</texture>
	</control>

	<!-- Artwork/Labels HiddenLabels 5300-5350 -->
	<control type="multiimage" id="5300"><!-- 4 extra fanart -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<imagepath background="true">$VAR[value_extrafanart]</imagepath>
	</control>
	<control type="multiimage" id="5301"><!-- 5 extra thumb -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<imagepath>$VAR[art_value_extrathumb]</imagepath>
	</control>
	<control type="image" id="5302"><!-- 8 landscape -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[panelart_value_landscape]</texture>
	</control>
	<control type="image" id="5307"><!-- 8 landscape -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[art_value_landscape]</texture>
	</control>
	<control type="image" id="5303"><!-- clearart -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[art_value_clearart]</texture>
	</control>
	<control type="image" id="5304"><!-- clearlogo -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[art_value_logo]</texture>
	</control>
	<control type="image" id="5305"><!-- banner -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[art_value_banner]</texture>
	</control>
	<control type="image" id="5306"><!-- fanart -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<texture>$VAR[value_defaultfanart]</texture>
	</control>
	<!-- SetMultifanart -->
	<control type="fadelabel" id="5308">
		<left>-320</left>
		<top>-130</top>
		<width>1280</width>
		<height>125</height>
		<font>SemiLarge</font>
		<pauseatend>0</pauseatend>
		<randomize>true</randomize>
		<scrollout>true</scrollout>
		<scrollspeed>60</scrollspeed>
		<textcolor>00FFFFFF</textcolor>
		<label>$INFO[Container(5350).ListItem.Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(1).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(2).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(3).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(4).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(5).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(6).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(7).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(8).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(9).Art(fanart)]</label>
		<label>$INFO[Container(5350).ListItem(10).Art(fanart)]</label>
	</control>
	<!-- HiddenCondition Lastwatched -->
	<control type="label" id="5309">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_video_value_lastshow]</label>
	</control>
	<control type="label" id="5310">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_video_value_lastseason]</label>
	</control>

	<!-- Fallback var alle view bis 3 Artworks -->
	<!-- Block 1 6300 -->
	<control type="label" id="6300">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_video_artworkblock1fallback]</label>
	</control>
	<!-- Block 2 6301 -->
	<control type="label" id="6301">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_video_artworkblock2fallback]</label>
	</control>
	<!-- Block 3 6302 -->
	<control type="label" id="6302">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_video_artworkblock3fallback]</label>
	</control>
	<!--	HiddenContent Container -->
	<control type="list" id="5350">
		<include>Compaircontainer</include>
		<content target="video">$VAR[content_focus]</content>
	</control>
</include>

<include name="viewglobal_files_hiddencontrols">
	<!-- HiddenContent Container -->
	<control type="list" id="5350">
		<include>Compaircontainer</include>
		<content target="video">$VAR[content_focus]</content>
	</control>
	<control type="label" id="5101"><!-- Plot Empty condition for right list fullplot focus -->
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_plot]</label>
	</control>
	<control type="image" id="5102">
		<include>Hiddencontrol</include>
		<texture fallback="leer">$VAR[art_value_cdart]</texture>
	</control>
	<control type="multiimage" id="5300"><!-- 4 extra fanart -->
		<include>Hiddencontrol</include>
		<timeperimage>6000</timeperimage>
		<randomize>true</randomize>
		<imagepath background="true">$VAR[value_extrafanart]</imagepath>
	</control>
	<control type="label" id="5112">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo1_label]</label>
	</control>
	<control type="label" id="5113">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo2_label]</label>
	</control>
	<control type="label" id="5114">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo3_label]</label>
	</control>
	<control type="label" id="5115">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo4_label]</label>
	</control>
	<control type="label" id="5116">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo5_label]</label>
	</control>
	<control type="label" id="5117">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo6_label]</label>
	</control>
	<control type="label" id="5118">
		<include>Hiddencontrol</include>
		<label>$VAR[viewglobal_value_fileinfo7_label]</label>
	</control>
</include>

<!-- Fallback var alle videoviews bis 3 Artworks -->
<variable name="viewglobal_video_artworkblock1fallback">
	<!-- View51LowList -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistinfoGroup),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View53BannerInfo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow1),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<!-- View56Rightlist -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistinfoGroup),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View57Category -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategoryBigArtwork),Fanart) + String.IsEmpty(Container(510).ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(57) + String.IsEmpty(Skin.String(CategoryBigArtwork)) + Control.HasFocus(510) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategoryBigArtwork),Extra-Fanart) + Control.HasFocus(510) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategoryBigArtwork),Extra-Thumb) + Control.HasFocus(510) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategoryBigArtwork),Clear-Art) + String.IsEmpty(Container(510).ListItem.Art(clearart))">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategoryBigArtwork),Clear-Logo) + String.IsEmpty(Container(510).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<!-- View58Wall -->
	<value condition="Control.IsVisible(58) + String.IsEqual(Skin.String(WallFocusArtwork),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(58) + String.IsEqual(Skin.String(WallFocusArtwork),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(58) + String.IsEqual(Skin.String(WallFocusArtwork),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View60Poster -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(60) + String.IsEmpty(Skin.String(PosterlistRow1)) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow1),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View64LandScapeX -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(64) + String.IsEmpty(Skin.String(LandscapeEXRow1)) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow1),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<!-- View65Set -->
	<value condition="Control.IsVisible(65) + String.IsEmpty(Skin.String(SetcontentBigArtwork)) + String.IsEmpty(Container(511).ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Fanart) + String.IsEmpty(Container(511).ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Clear-Art) + String.IsEmpty(Container(511).ListItem.Art(clearart))">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Clear-Logo) + String.IsEmpty(Container(511).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentBigArtwork),Landscape) + String.IsEmpty(Container(511).ListItem.Art(landscape))">xx</value><!-- 8 landscape -->
	<!-- View66SimpleList -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(66) + String.IsEmpty(Skin.String(SimpleListRow1)) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow1),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<value></value>
</variable>

<variable name="viewglobal_video_artworkblock2fallback">
	<!-- View51LowList -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(51) + String.IsEmpty(Skin.String(LowlistArtwork1)) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistArtwork1),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View53BannerInfo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow2),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<!-- View56Rightlist -->
	<value condition="Control.IsVisible(56) + String.IsEqual(Skin.String(RightlistArtworkMid),Banner) + String.IsEqual(Control.GetLabel(5305),)">xx</value><!-- 1 banner -->
	<!-- View57Category -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategorySmallArtwork),Fanart) + String.IsEmpty(Container(510).ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategorySmallArtwork),Extra-Fanart) + Control.HasFocus(510) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategorySmallArtwork),Extra-Thumb) + Control.HasFocus(510) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategorySmallArtwork),Clear-Art) + String.IsEmpty(Container(510).ListItem.Art(clearart))">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(57) + String.IsEqual(Skin.String(CategorySmallArtwork),Clear-Logo) + String.IsEmpty(Container(510).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(57) + String.IsEmpty(Skin.String(CategorySmallArtwork)) + String.IsEmpty(Container(510).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<!-- View60Poster -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(60) + String.IsEmpty(Skin.String(PosterlistRow2)) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow2),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View64LandScapeX -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow2),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<!-- View65Set -->
	<value condition="Control.IsVisible(65) + String.IsEmpty(Skin.String(SetListArtwork)) + String.IsEmpty(ListItem.Art(fanart))">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetListArtwork),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<!-- View66SimpleList -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow2),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<value></value>
</variable>

<variable name="viewglobal_video_artworkblock3fallback">
	<!-- View51LowList -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Fanart) + String.IsEmpty(ListItem.Art(fanart))">xx</value><!-- 2 fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(51) + String.IsEmpty(Skin.String(LowlistRow2_3)) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(51) + String.IsEqual(Skin.String(LowlistRow2_3),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View53BannerInfo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(53) + String.IsEqual(Skin.String(BannerinfoRow3),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<!-- View56Rightlist -->
	<value condition="Control.IsVisible(56)">xx</value><!-- leer -->
	<!-- View57Category -->
	<value condition="Control.IsVisible(57)">xx</value><!-- leer -->
	<!-- View60Poster -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(60) + String.IsEqual(Skin.String(PosterlistRow3),Landscape) + String.IsEqual(Control.GetLabel(5307),)">xx</value><!-- 8 landscape -->
	<!-- View64LandScapeX -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(64) + String.IsEmpty(Skin.String(LandscapeEXRow3)) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(64) + String.IsEqual(Skin.String(LandscapeEXRow3),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<value></value>
	<!-- View65Set -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Fanart) + String.IsEmpty(Container(511).ListItem.Art(fanart))">xx</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Clear-Art) + String.IsEmpty(Container(511).ListItem.Art(clearart))">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(65) + String.IsEmpty(Skin.String(SetcontentSmallArtwork)) + String.IsEmpty(Container(511).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Clear-Logo) + String.IsEmpty(Container(511).ListItem.Art(clearlogo))">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(65) + String.IsEqual(Skin.String(SetcontentSmallArtwork),Landscape) + String.IsEmpty(Container(511).ListItem.Art(landscape))">xx</value><!-- 8 landscape -->
	<!-- View66SimpleList -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Fanart)">$INFO[ListItem.Art(fanart)]</value><!-- 3 fanart -->
	<value condition="Control.IsVisible(66) + String.IsEmpty(Skin.String(SimpleListRow3)) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Extra-Fanart) + String.IsEqual(Control.GetLabel(5300),)">xx</value><!-- 4 extra fanart -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Extra-Thumb) + String.IsEqual(Control.GetLabel(5301),)">xx</value><!-- 5 extra thumb --><!-- xx wenn Var leer -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Clear-Art) + String.IsEqual(Control.GetLabel(5303),)">xx</value><!-- 6 clear art -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Clear-Logo) + String.IsEqual(Control.GetLabel(5304),)">xx</value><!-- 7 clear logo -->
	<value condition="Control.IsVisible(66) + String.IsEqual(Skin.String(SimpleListRow3),Landscape) + String.IsEqual(Control.GetLabel(5302),)">xx</value><!-- 8 landscape -->
	<value></value>
</variable>

<include name="viewglobal_settings_back">
	<onback>Dialog.Close(1113)</onback>
	<onback>50</onback>
	<itemgap>0</itemgap>
</include>

<include name="viewglobal_settings_navigation">
	<onleft>Dialog.Close(1113)</onleft>
	<onleft>SetFocus(50)</onleft>
	<onright>Dialog.Close(1113)</onright>
	<onright>SetFocus(50)</onright>
</include>

<!-- ####Wildcard formats ####-->
<!-- Top elements Formats -->
<include name="viewglobal_topelements_textinfo_label">
	<height>20</height>
	<width>320</width>
	<aligny>top</aligny>
</include>

<include name="viewglobal_topelements_textinfo">
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo1_title] $VAR[viewglobal_value_videoinfo1_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo2_title] $VAR[viewglobal_value_videoinfo2_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo3_title] $VAR[viewglobal_value_videoinfo3_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo4_title] $VAR[viewglobal_value_videoinfo4_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo5_title] $VAR[viewglobal_value_videoinfo5_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo6_title] $VAR[viewglobal_value_videoinfo6_label]</label>
	</control>
	<control type="label">
		<include>viewglobal_topelements_textinfo_label</include>
		<label>$VAR[viewglobal_value_videoinfo7_title] $VAR[viewglobal_value_videoinfo7_label]</label>
	</control>


</include>

<include name="viewglobal_topelements_plot">
	<label fallback="31009">$VAR[viewglobal_value_plot]</label>
	<autoscroll delay="8000" time="2000" repeat="8000">true</autoscroll>
</include>

<include name="viewglobal_topelements_fanart">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture background="true">$VAR[value_defaultfanart]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<include name="viewglobal_topelements_banner">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture background="true">$VAR[art_value_banner]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<include name="viewglobal_topelements_poster">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture fallback="defaultpictures/DefaultMovies.png" background="true">$VAR[art_value_content_poster]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<include name="viewglobal_topelements_cover">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture fallback="DefaultAudio.png" background="true">$INFO[Container(5350).ListItem.Icon]</texture>
	<bordertexture border="6" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>6</bordersize>
</include>

<include name="viewglobal_topelements_extrafanart">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture background="true">$INFO[Control.GetLabel(5300)]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<include name="viewglobal_topelements_extrathumb">
	<aspectratio>stretch</aspectratio>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<texture background="true">$INFO[Control.GetLabel(5301)]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<include name="viewglobal_topelements_clearart">
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<aspectratio align="center" aligny="bottom">keep</aspectratio>
	<texture background="true">$VAR[art_value_clearart]</texture>
	<bordersize>3</bordersize>
</include>

<include name="viewglobal_topelements_logo">
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<aspectratio align="center" aligny="center">keep</aspectratio>
	<texture background="true">$VAR[art_value_logo]</texture>
</include>

<include name="viewglobal_topelements_character">
	<aspectratio align="center" aligny="bottom">keep</aspectratio>
	<texture background="true">$VAR[value_art_character]</texture>
	<fadetime>PanelartworksCrossFadeTime</fadetime>
</include>

<include name="viewglobal_topelements_landscape">
	<fadetime>PanelartworksCrossFadeTime</fadetime>
	<aspectratio>stretch</aspectratio>
	<texture background="true">$VAR[art_value_landscape]</texture>
	<bordertexture border="8" colordiffuse="$VAR[AC_value_shadow_color]">borders/border6.png</bordertexture>
	<bordersize>8</bordersize>
</include>

<!-- #### Contents ####-->
<!-- Similar Items - playlist based -->
<variable name="videocontent_similar">
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Comedy) | String.Contains(ListItem.Genre,Sitcom) | String.Contains(ListItem.Genre,Komödie)]">special://skin/playlists/genres/tv/Komoedie.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Family) | String.Contains(ListItem.Genre,Familien) | String.Contains(ListItem.Genre,Kinder) | String.Contains(ListItem.Genre,Kids)]">special://skin/playlists/genres/tv/Familie.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,CSI) | String.Contains(ListItem.Genre,Crime) | String.Contains(ListItem.Genre,Krimi) | String.Contains(ListItem.Genre,Agenten)]">special://skin/playlists/genres/tv/Krimi.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Sci-Fi) | String.Contains(ListItem.Genre,fiction) | String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Stargate) | String.Contains(ListItem.Genre,Marvel)]">special://skin/playlists/genres/tv/Science fiction.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Animation) | String.Contains(ListItem.Genre,Anime) | String.Contains(ListItem.Genre,Zeichentrick)]">special://skin/playlists/genres/tv/Animation.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Musik) | String.Contains(ListItem.Genre,Music) | String.Contains(ListItem.Genre,Musical)]">special://skin/playlists/genres/tv/Musik.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Mystic) | String.Contains(ListItem.Genre,Thrill) | String.Contains(ListItem.Genre,Mystery) | String.Contains(ListItem.Genre,Fantasy) | String.Contains(ListItem.Genre,Thriller)]">special://skin/playlists/genres/tv/Mystery.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Action) | String.Contains(ListItem.Genre,Kampfsport) | String.Contains(ListItem.Genre,Martial) | String.Contains(ListItem.Genre,Ninja)]">special://skin/playlists/genres/tv/Action.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Western) | String.Contains(ListItem.Genre,Abenteuer) | String.Contains(ListItem.Genre,Adventure)]">special://skin/playlists/genres/tv/Abenteuer.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">special://skin/playlists/genres/tv/Natur.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Dokumenation) | String.Contains(ListItem.Genre,Doku) | String.Contains(ListItem.Genre,Dokumentary) | String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">special://skin/playlists/genres/tv/Dokumenation.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Drama) | String.Contains(ListItem.Genre,Love) | String.Contains(ListItem.Genre,Romance)]">special://skin/playlists/genres/tv/Drama.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Sport) | String.Contains(ListItem.Genre,Sports) | String.Contains(ListItem.Genre,Boxer) | String.Contains(ListItem.Genre,Boxing) | String.Contains(ListItem.Genre,Football) | String.Contains(ListItem.Genre,Basketball) | String.Contains(ListItem.Genre,Baseball)]">special://skin/playlists/genres/tv/Sport.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Krieg) | String.Contains(ListItem.Genre,War)]">special://skin/playlists/genres/tv/Krieg.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Historie) | String.Contains(ListItem.Genre,History) | String.Contains(ListItem.Genre,Monumental) | String.Contains(ListItem.Genre,Classic) | String.Contains(ListItem.Genre,Klassik) | String.Contains(ListItem.Genre,tv-Noir)]">special://skin/playlists/genres/tv/History.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Horror) | String.Contains(ListItem.Genre,Zombies) | String.Contains(ListItem.Genre,Splatter)]">special://skin/playlists/genres/tv/Horror.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Romance) | String.Contains(ListItem.Genre,Romantik)]">special://skin/playlists/genres/tv/Romantik.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,DC) | String.Contains(ListItem.Genre,DC Comic)]">special://skin/playlists/genres/tv/DC.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Fantasy)">special://skin/playlists/genres/tv/Fantasy.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Indie)">special://skin/playlists/genres/tv/Indie.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Kampfsport) | String.Contains(ListItem.Genre,Martial Arts)]">special://skin/playlists/genres/tv/Kampfsport.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Marvel)">special://skin/playlists/genres/tv/Marvel.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Religion)">special://skin/playlists/genres/tv/Religion.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + [String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Superheroes)]">special://skin/playlists/genres/tv/Superhelden.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Thriller)">special://skin/playlists/genres/tv/Thriller.xsp</value>
	<value condition="[Container.Content(episodes) | Container.Content(tvshows) | Container.Content(seasons)] + String.Contains(ListItem.Genre,Western)">special://skin/playlists/genres/tv/Western.xsp</value>
	

	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Comedy) | String.Contains(ListItem.Genre,Sitcom) | String.Contains(ListItem.Genre,Komödie)]">special://skin/playlists/genres/film/Komoedie.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Family) | String.Contains(ListItem.Genre,Familien) | String.Contains(ListItem.Genre,Kinder) | String.Contains(ListItem.Genre,Kids)]">special://skin/playlists/genres/film/Familie.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,CSI) | String.Contains(ListItem.Genre,Crime) | String.Contains(ListItem.Genre,Krimi) | String.Contains(ListItem.Genre,Agenten)]">special://skin/playlists/genres/film/Krimi.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Sci-Fi) | String.Contains(ListItem.Genre,fiction) | String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Stargate) | String.Contains(ListItem.Genre,Marvel)]">special://skin/playlists/genres/film/Science fiction.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Animation) | String.Contains(ListItem.Genre,Anime) | String.Contains(ListItem.Genre,Zeichentrick)]">special://skin/playlists/genres/film/Animation.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Musik) | String.Contains(ListItem.Genre,Music) | String.Contains(ListItem.Genre,Musical)]">special://skin/playlists/genres/film/Musik.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Mystic) | String.Contains(ListItem.Genre,Thrill) | String.Contains(ListItem.Genre,Mystery) | String.Contains(ListItem.Genre,Fantasy) | String.Contains(ListItem.Genre,Thriller)]">special://skin/playlists/genres/film/Mystery.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Action) | String.Contains(ListItem.Genre,Kampfsport) | String.Contains(ListItem.Genre,Martial) | String.Contains(ListItem.Genre,Ninja)]">special://skin/playlists/genres/film/Action.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Western) | String.Contains(ListItem.Genre,Abenteuer) | String.Contains(ListItem.Genre,Adventure)]">special://skin/playlists/genres/film/Abenteuer.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">special://skin/playlists/genres/film/Natur.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Dokumenation) | String.Contains(ListItem.Genre,Doku) | String.Contains(ListItem.Genre,Dokumentary) | String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">special://skin/playlists/genres/film/Dokumenation.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Drama) | String.Contains(ListItem.Genre,Love) | String.Contains(ListItem.Genre,Romance)]">special://skin/playlists/genres/film/Drama.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Sport) | String.Contains(ListItem.Genre,Sports) | String.Contains(ListItem.Genre,Boxer) | String.Contains(ListItem.Genre,Boxing) | String.Contains(ListItem.Genre,Football) | String.Contains(ListItem.Genre,Basketball) | String.Contains(ListItem.Genre,Baseball)]">special://skin/playlists/genres/film/Sport.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Krieg) | String.Contains(ListItem.Genre,War)]">special://skin/playlists/genres/film/Krieg.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Historie) | String.Contains(ListItem.Genre,History) | String.Contains(ListItem.Genre,Monumental) | String.Contains(ListItem.Genre,Classic) | String.Contains(ListItem.Genre,Klassik) | String.Contains(ListItem.Genre,Film-Noir)]">special://skin/playlists/genres/film/History.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Horror) | String.Contains(ListItem.Genre,Zombies) | String.Contains(ListItem.Genre,Splatter)]">special://skin/playlists/genres/film/Horror.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Romance) | String.Contains(ListItem.Genre,Romantik)]">special://skin/playlists/genres/film/Romantik.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,DC) | String.Contains(ListItem.Genre,DC Comic)]">special://skin/playlists/genres/film/DC.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Fantasy)">special://skin/playlists/genres/film/Fantasy.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Indie)">special://skin/playlists/genres/film/Indie.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Kampfsport) | String.Contains(ListItem.Genre,Martial Arts)]">special://skin/playlists/genres/film/Kampfsport.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Marvel)">special://skin/playlists/genres/film/Marvel.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Religion)">special://skin/playlists/genres/film/Religion.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + [String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Superheroes)]">special://skin/playlists/genres/film/Superhelden.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Thriller)">special://skin/playlists/genres/film/Thriller.xsp</value>
	<value condition="Container.Content(movies) + !ListItem.IsCollection  + String.Contains(ListItem.Genre,Western)">special://skin/playlists/genres/film/Western.xsp</value>

	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Comedy) | String.Contains(Window(home).Property(Set.Movies.Genre),Sitcom) | String.Contains(Window(home).Property(Set.Movies.Genre),Komödie)]">special://skin/playlists/genres/film/Komoedie.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Family) | String.Contains(Window(home).Property(Set.Movies.Genre),Familien) | String.Contains(Window(home).Property(Set.Movies.Genre),Kinder) | String.Contains(Window(home).Property(Set.Movies.Genre),Kids)]">special://skin/playlists/genres/film/Familie.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),CSI) | String.Contains(Window(home).Property(Set.Movies.Genre),Crime) | String.Contains(Window(home).Property(Set.Movies.Genre),Krimi) | String.Contains(Window(home).Property(Set.Movies.Genre),Agenten)]">special://skin/playlists/genres/film/Krimi.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Sci-Fi) | String.Contains(Window(home).Property(Set.Movies.Genre),fiction) | String.Contains(Window(home).Property(Set.Movies.Genre),Superhelden) | String.Contains(Window(home).Property(Set.Movies.Genre),Stargate) | String.Contains(Window(home).Property(Set.Movies.Genre),Marvel)]">special://skin/playlists/genres/film/Science fiction.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Animation) | String.Contains(Window(home).Property(Set.Movies.Genre),Anime) | String.Contains(Window(home).Property(Set.Movies.Genre),Zeichentrick)]">special://skin/playlists/genres/film/Animation.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Musik) | String.Contains(Window(home).Property(Set.Movies.Genre),Music) | String.Contains(Window(home).Property(Set.Movies.Genre),Musical)]">special://skin/playlists/genres/film/Musik.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Mystic) | String.Contains(Window(home).Property(Set.Movies.Genre),Thrill) | String.Contains(Window(home).Property(Set.Movies.Genre),Mystery) | String.Contains(Window(home).Property(Set.Movies.Genre),Fantasy) | String.Contains(Window(home).Property(Set.Movies.Genre),Thriller)]">special://skin/playlists/genres/film/Mystery.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Action) | String.Contains(Window(home).Property(Set.Movies.Genre),Kampfsport) | String.Contains(Window(home).Property(Set.Movies.Genre),Martial) | String.Contains(Window(home).Property(Set.Movies.Genre),Ninja)]">special://skin/playlists/genres/film/Action.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Western) | String.Contains(Window(home).Property(Set.Movies.Genre),Abenteuer) | String.Contains(Window(home).Property(Set.Movies.Genre),Adventure)]">special://skin/playlists/genres/film/Abenteuer.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),National) | String.Contains(Window(home).Property(Set.Movies.Genre),Nature)]">special://skin/playlists/genres/film/Natur.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Dokumenation) | String.Contains(Window(home).Property(Set.Movies.Genre),Doku) | String.Contains(Window(home).Property(Set.Movies.Genre),Dokumentary) | String.Contains(Window(home).Property(Set.Movies.Genre),National) | String.Contains(Window(home).Property(Set.Movies.Genre),Nature)]">special://skin/playlists/genres/film/Dokumenation.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Drama) | String.Contains(Window(home).Property(Set.Movies.Genre),Love) | String.Contains(Window(home).Property(Set.Movies.Genre),Romance)]">special://skin/playlists/genres/film/Drama.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Sport) | String.Contains(Window(home).Property(Set.Movies.Genre),Sports) | String.Contains(Window(home).Property(Set.Movies.Genre),Boxer) | String.Contains(Window(home).Property(Set.Movies.Genre),Boxing) | String.Contains(Window(home).Property(Set.Movies.Genre),Football) | String.Contains(Window(home).Property(Set.Movies.Genre),Basketball) | String.Contains(Window(home).Property(Set.Movies.Genre),Baseball)]">special://skin/playlists/genres/film/Sport.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Krieg) | String.Contains(Window(home).Property(Set.Movies.Genre),War)]">special://skin/playlists/genres/film/Krieg.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Historie) | String.Contains(Window(home).Property(Set.Movies.Genre),History) | String.Contains(Window(home).Property(Set.Movies.Genre),Monumental) | String.Contains(Window(home).Property(Set.Movies.Genre),Classic) | String.Contains(Window(home).Property(Set.Movies.Genre),Klassik) | String.Contains(Window(home).Property(Set.Movies.Genre),Film-Noir)]">special://skin/playlists/genres/film/History.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Horror) | String.Contains(Window(home).Property(Set.Movies.Genre),Zombies) | String.Contains(Window(home).Property(Set.Movies.Genre),Splatter)]">special://skin/playlists/genres/film/Horror.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Romance) | String.Contains(Window(home).Property(Set.Movies.Genre),Romantik)]">special://skin/playlists/genres/film/Romantik.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),DC) | String.Contains(Window(home).Property(Set.Movies.Genre),DC Comic)]">special://skin/playlists/genres/film/DC.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Fantasy)">special://skin/playlists/genres/film/Fantasy.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Indie)">special://skin/playlists/genres/film/Indie.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Kampfsport) | String.Contains(Window(home).Property(Set.Movies.Genre),Martial Arts)]">special://skin/playlists/genres/film/Kampfsport.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Marvel)">special://skin/playlists/genres/film/Marvel.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Religion)">special://skin/playlists/genres/film/Religion.xsp</value>
	<value condition="ListItem.IsCollection  + [String.Contains(Window(home).Property(Set.Movies.Genre),Superhelden) | String.Contains(Window(home).Property(Set.Movies.Genre),Superheroes)]">special://skin/playlists/genres/film/Superhelden.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Thriller)">special://skin/playlists/genres/film/Thriller.xsp</value>
	<value condition="ListItem.IsCollection  + String.Contains(Window(home).Property(Set.Movies.Genre),Western)">special://skin/playlists/genres/film/Western.xsp</value>
</variable>

<variable name="videocontent_similar_sort">
	<value condition="String.IsEqual(Skin.String(ContentSort),Jahr)">year</value>
	<value condition="String.IsEqual(Skin.String(ContentSort),Bewertung)">rating</value>
	<value condition="String.IsEqual(Skin.String(ContentSort),Aufgenommen)">dateadded</value>
	<value condition="String.IsEqual(Skin.String(ContentSort),Abgespielt)">playcount</value>
	<value condition="String.IsEqual(Skin.String(ContentSort),Zufall)">random</value>
	<value>playlist</value>
</variable>

<variable name="videocontent_similar_limit">
	<value condition="String.IsEqual(Skin.String(SimilarLimit),20)">20</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),19)">19</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),18)">18</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),17)">17</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),16)">16</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),15)">15</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),14)">14</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),13)">13</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),12)">12</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),11)">11</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),10)">10</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),9)">9</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),8)">8</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),7)">7</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),6)">6</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),5)">5</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),4)">4</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),3)">3</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),2)">2</value>
	<value condition="String.IsEqual(Skin.String(SimilarLimit),1)">1</value>
	<value>0</value>
</variable>

<!-- ####Infolabel Vars ####-->
<!-- Date Prefix/Suffix Movies/TvShow/Episode level -->
<variable name="viewglobal_video_date">
	<value condition="[Container.Content(movies) | Container.Content(episodes)] + Integer.IsGreater(ListItem.PlayCount,0)">$INFO[ListItem.LastPlayed]</value>
	<value condition="[Container.Content(movies) | Container.Content(episodes)] + Integer.IsGreater(ListItem.PercentPlayed,10)">$INFO[ListItem.LastPlayed]$INFO[ListItem.PercentPlayed, (,%) ]</value>
	<value condition="Container.Content(episodes) + !Integer.IsGreater(ListItem.PlayCount,0)">$INFO[ListItem.Premiered]</value>
	<value condition="Container.Content(movies) + !Integer.IsGreater(ListItem.PlayCount,0)">$INFO[ListItem.Year]</value>
	<value condition="Container.Content(tvshows) + !String.IsEmpty(ListItem.Premiered)">$INFO[ListItem.Premiered]</value>
	<value condition="!String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year]</value>
</variable>

<variable name="viewglobal_video_dateprefix">
	<value condition="[Container.Content(movies) | Container.Content(episodes)] + Integer.IsGreater(ListItem.PlayCount,0)">$LOCALIZE[31072]: </value>
	<value condition="[Container.Content(movies) | Container.Content(episodes)] + Integer.IsGreater(ListItem.PercentPlayed,10)">$LOCALIZE[31073]: </value>
	<value condition="!String.IsEmpty(ListItem.Year) + !String.IsEmpty(ListItem.Premiered)">$LOCALIZE[31074]: </value>
</variable>

<!-- Headertitle -->
<variable name="viewglobal_value_videotitle">
	<value condition="Container.Content(movies)">$INFO[ListItem.Title][COLOR=TextColor2]$INFO[ListItem.Year, (,)][/COLOR]</value>
	<value condition="Container.Content(tvshows)">$INFO[ListItem.TvShowTitle][COLOR=TextColor2]$INFO[ListItem.Year, (,)][/COLOR]</value>
	<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Season)">$INFO[ListItem.TvShowTitle,, - ]$VAR[global_seasonprefix]$INFO[ListItem.Season]</value>
	<value condition="Container.Content(seasons)">$INFO[Container.ShowTitle]</value>
	<value condition="Container.Content(seasons) + String.IsEmpty(ListItem.Season)">$INFO[ListItem.TvShowTitle]</value>
	<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode) + !String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/)">$VAR[global_episodeprefix]$INFO[ListItem.Episode,, ]$INFO[ListItem.Title]</value>
	<value condition="Container.Content(episodes) + String.IsEmpty(ListItem.Episode) + !String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/)">$INFO[ListItem.Title]</value>

	<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode) + String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/)">$INFO[ListItem.TvShowTitle,, - ]$VAR[global_episodeprefix]$INFO[ListItem.Episode,, ]$INFO[ListItem.Title]</value>
	<value condition="Container.Content(episodes) + String.IsEmpty(ListItem.Episode) + String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/)">$INFO[ListItem.TvShowTitle,, - ]$INFO[ListItem.Title]</value>
	<value>$INFO[ListItem.Label]</value>
</variable>

<variable name="viewglobal_value_episodetitle">
	<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode) + !String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/) + !String.IsEmpty(ListItem.Title)">$VAR[global_episodeprefix]$INFO[ListItem.Episode,, ]$INFO[ListItem.Title]</value>
	<value condition="Container.Content(episodes) + String.IsEmpty(ListItem.Episode) + !String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.Title]</value>

	<value condition="Container.Content(episodes) + !String.IsEmpty(ListItem.Episode) + String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.TvShowTitle,, - ]$VAR[global_episodeprefix]$INFO[ListItem.Episode,, ]$INFO[ListItem.Title]</value>
	<value condition="Container.Content(episodes) + String.IsEmpty(ListItem.Episode) + String.Contains(Container.FolderPath,videodb://recentlyaddedepisodes/) + !String.IsEmpty(ListItem.Title)">$INFO[ListItem.TvShowTitle,, - ]$INFO[ListItem.Title]</value>
	<value>$INFO[ListItem.Label]</value>
</variable>
	
<variable name="viewglobal_value_plot">
	<value condition="![Container.Content(files) | Container.Content(addons) | String.StartsWith(ListItem.Path,videodb://movies/sets) | Window.IsActive(music) | Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.Tagline,[B],[/B][CR]]$INFO[ListItem.Plot]</value>
	<value condition="ListItem.IsCollection + System.HasAddon(script.skin.info.service)">$INFO[Window(home).Property(Set.Movies.Plot)]</value>
	<value condition="ListItem.IsCollection + !System.HasAddon(script.skin.info.service)">[COLOR=TextColorSelect]$LOCALIZE[20457] | $LOCALIZE[31342]:[/COLOR] Skin Info Service</value>
	<value condition="Container.Content(addons)">$INFO[ListItem.AddonSummary,[B],[/B][CR]]$INFO[ListItem.AddonDescription]</value>
	<value condition="Container.Content(albums)">$INFO[ListItem.Property(Album_Description)]</value>
	<value condition="Container.Content(artists)">$INFO[ListItem.Property(Artist_Description)]</value>
	<value condition="Container.Content(songs)">$INFO[ListItem.Comment]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">$INFO[ListItem.Plot]$INFO[ListItem.NextTitle,[CR][B]$LOCALIZE[31039][/B] ,]$INFO[ListItem.NextPlot]</value>
	<value condition="Container.Content(files)">$INFO[ListItem.Plot]$INFO[ListItem.Property(Album_Description)]$INFO[ListItem.Property(Artist_Description)]</value>
</variable>

<!-- ####Infos #### -->
<!-- ####Video #### -->
<variable name="viewglobal_value_videoinfo1_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[652]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[652]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$VAR[viewglobal_video_dateprefix][/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[31085]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[31085]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[19029]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo1_label">
	<value condition="!String.IsEmpty(ListItem.Year) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Year]</value>
	<value condition="!String.IsEmpty(ListItem.Year) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Years)]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">$VAR[viewglobal_video_date]</value>
	<value condition="!String.IsEmpty(ListItem.Year) + String.IsEqual(ListItem.DBTYPE,season)">$INFO[ListItem.Year]</value>
	<value condition="!String.IsEmpty(ListItem.Premiered) + String.IsEqual(ListItem.DBTYPE,tvshow)">$INFO[ListItem.Premiered]</value>
	<value condition="!String.IsEmpty(ListItem.ChannelName) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.ChannelNumber,,. ]$INFO[ListItem.ChannelName]</value>
	<value>[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo2_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[126]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[126]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode) + Window.IsVisible(videos)">[COLOR=TextColor2]$LOCALIZE[126]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[20360]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[20360]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[126]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo2_label">
	<value condition="Integer.IsGreater(ListItem.PlayCount,0) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.LastPlayed]$INFO[ListItem.PlayCount, (,)]</value>
	<value condition="Integer.IsGreater(ListItem.PercentPlayed,10) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.PercentPlayed]% $INFO[ListItem.LastPlayed,$LOCALIZE[31027] ,]</value>
	<value condition="!Integer.IsGreater(ListItem.PlayCount,0) + String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColorSelect]$LOCALIZE[31086][/COLOR]</value>
	<value condition="!String.IsEmpty(Container(5350).ListItem.Label) + String.IsEqual(ListItem.DBTYPE,set) + Integer.IsGreater(Container(5350).NumItems,1)">$INFO[Container(5350).NumItems,, $LOCALIZE[20342]]</value>
	<value condition="!String.IsEmpty(Container(5350).ListItem.Label) + String.IsEqual(ListItem.DBTYPE,set) + !Integer.IsGreater(Container(5350).NumItems,1)">$INFO[Container(5350).NumItems,, $LOCALIZE[20338]]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode) + Window.IsVisible(videos)">$INFO[Container.NumItems] $LOCALIZE[20360] ($LOCALIZE[16101]: $INFO[Container.TotalUnWatched])</value>
	<value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + String.IsEqual(ListItem.DBTYPE,season) + Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes)] ($LOCALIZE[16101]: $INFO[ListItem.Property(UnwatchedEpisodes)])</value>
	<value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + String.IsEqual(ListItem.DBTYPE,season) + !Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes)] $LOCALIZE[31087]</value>
	<value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes)] ($LOCALIZE[16101]: $INFO[ListItem.Property(UnwatchedEpisodes)])</value>
	<value condition="!String.IsEmpty(ListItem.Property(TotalEpisodes)) + String.IsEqual(ListItem.DBTYPE,tvshow) + !Integer.IsGreater(ListItem.Property(UnwatchedEpisodes),0)">$INFO[ListItem.Property(TotalEpisodes)] $LOCALIZE[31087]</value>
	<value condition="!String.IsEmpty(ListItem.StartTime) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.StartTime]$INFO[ListItem.EndTime,/,]</value>
	<value>[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo3_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[180]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[180]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$LOCALIZE[180]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[31084]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[31084]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[369]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo3_label">
	<value condition="!String.IsEmpty(ListItem.Duration) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Duration,, $LOCALIZE[31026]]</value>
	<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.Runtime)) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Runtime),, $LOCALIZE[31026]]</value>
	<value condition="!String.IsEmpty(ListItem.Duration) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Duration,, $LOCALIZE[31026]]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season) + !Integer.IsGreater(Container.NumItems,1)">$INFO[Container.NumItems,, $LOCALIZE[31075]]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season) + Integer.IsGreater(Container.NumItems,1)">$INFO[Container.NumItems,, $LOCALIZE[31084]]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + !Integer.IsGreater(ListItem.Property(TotalSeasons),1) + !String.IsEqual(ListItem.DBTYPE,season)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[31075]]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow) + Integer.IsGreater(ListItem.Property(TotalSeasons),1) + !String.IsEqual(ListItem.DBTYPE,season)">$INFO[ListItem.Property(TotalSeasons),, $LOCALIZE[31084]]</value>
	<value condition="!String.IsEmpty(ListItem.Title) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.Title]$INFO[ListItem.EpisodeName, - ,]</value>
	<value>[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo4_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[574]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[31066]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$LOCALIZE[31068]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo4_label">
	<value condition="!String.IsEmpty(ListItem.Country) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Country]</value>
	<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.Country)) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Country)]</value>i
	<value condition="!String.IsEmpty(ListItem.Director) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Director]</value>
	<value condition="!String.IsEmpty(ListItem.Genre) + String.IsEqual(ListItem.DBTYPE,season)">$INFO[ListItem.Genre]</value>
	<value condition="!String.IsEmpty(ListItem.Genre) + String.IsEqual(ListItem.DBTYPE,tvshow)">$INFO[ListItem.Genre]</value>
	<value condition="!String.IsEmpty(ListItem.Genre) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.Genre]</value>
	<value>[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo5_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$LOCALIZE[20417]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[572]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[572]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[31039]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo5_label">
	<value condition="!String.IsEmpty(ListItem.Genre) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Genre]</value>
	<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.Genre)) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Genre)]</value>
	<value condition="!String.IsEmpty(ListItem.Studio) + String.IsEqual(ListItem.DBTYPE,tvshow)">$INFO[ListItem.Studio]</value>
	<value condition="!String.IsEmpty(ListItem.Writer) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Writer]</value>
	<value condition="!String.IsEmpty(ListItem.Studio) + String.IsEqual(ListItem.DBTYPE,season)">$INFO[ListItem.Studio]</value>
	<value condition="!String.IsEmpty(ListItem.NextTitle) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.NextTitle]</value>
	<value>[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo6_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[572]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[572]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$LOCALIZE[572]:[/COLOR]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,season)">[COLOR=TextColor2]$LOCALIZE[31090]:[/COLOR]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=TextColor2]$LOCALIZE[31090]:[/COLOR]</value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[19080]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo6_label">
	<value condition="!String.IsEmpty(ListItem.Studio) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Studio]</value>
	<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.Studio)) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Studio)]</value>
	<value condition="!String.IsEmpty(ListItem.Studio) + String.IsEqual(ListItem.DBTYPE,episode)">$INFO[ListItem.Studio]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,season)">[COLOR=ACRed]$VAR[viewglobal_video_value_lastshowdate,, ]$VAR[viewglobal_video_value_lastseason,$LOCALIZE[31075],x]$VAR[viewglobal_video_value_lastepisode][/COLOR]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,tvshow)">[COLOR=ACRed]$VAR[viewglobal_video_value_lastshowdate,, ]$VAR[viewglobal_video_value_lastseason,$LOCALIZE[31075],x]$VAR[viewglobal_video_value_lastepisode][/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.NextStartTime) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.NextStartTime]$INFO[ListItem.NextEndTime,/,]</value>
	<value condition="[!String.IsEmpty(Control.GetLabel(5309)) + [String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,tvshow)]] | [String.IsEqual(ListItem.DBTYPE,movie)] | [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>

<variable name="viewglobal_value_videoinfo7_title">
	<value condition="String.IsEqual(ListItem.DBTYPE,movie)">[COLOR=TextColor2]$LOCALIZE[31068]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,set)">[COLOR=TextColor2]$LOCALIZE[31068]:[/COLOR]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=TextColor2]$LOCALIZE[31090]:[/COLOR]</value>
	<value condition="String.IsEqual(ListItem.DBTYPE,season)"></value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)"></value>
	<value condition="Window.IsActive(tvchannels) | Window.IsActive(radiochannels)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_videoinfo7_label">
	<value condition="!String.IsEmpty(ListItem.Director) + String.IsEqual(ListItem.DBTYPE,movie)">$INFO[ListItem.Director]</value>
	<value condition="!String.IsEmpty(Window(home).Property(Set.Movies.Director)) + String.IsEqual(ListItem.DBTYPE,set)">$INFO[Window(home).Property(Set.Movies.Director)]</value>
	<value condition="!String.IsEmpty(Control.GetLabel(5309)) + String.IsEqual(ListItem.DBTYPE,episode)">[COLOR=ACRed]$VAR[viewglobal_video_value_lastshowdate,, ]$VAR[viewglobal_video_value_lastseason,$LOCALIZE[31075],x]$VAR[viewglobal_video_value_lastepisode][/COLOR]</value>

	<value condition="String.IsEqual(ListItem.DBTYPE,season)"></value>
	<value condition="String.IsEqual(ListItem.DBTYPE,tvshow)"></value>
	<value condition="!String.IsEmpty(ListItem.NextGenre) + [Window.IsActive(tvchannels) | Window.IsActive(radiochannels)]">$INFO[ListItem.NextGenre]</value>
	<value condition="![String.IsEqual(ListItem.DBTYPE,tvshow) | String.IsEqual(ListItem.DBTYPE,season) | String.IsEqual(ListItem.DBTYPE,episode)]">[I][COLOR=TextColor3]$LOCALIZE[31008][/COLOR][/I]</value>
</variable>
<!-- ####files #### -->
<variable name="viewglobal_value_fileinfo1_title">
	<value condition="!String.IsEmpty(ListItem.Year) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[652]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_YearsActive)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[21898]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.TrackNumber) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">[COLOR=TextColor2]$LOCALIZE[554]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.AddonVersion) + [Window.IsActive(programs) | Container.Content(Addons)]">[COLOR=TextColor2]$LOCALIZE[31089]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_fileinfo1_label">
	<value condition="!String.IsEmpty(ListItem.Year) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Year]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_YearsActive)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_YearsActive)]</value>
	<value condition="!String.IsEmpty(ListItem.TrackNumber) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">$VAR[global_trackprefix]$INFO[ListItem.TrackNumber]</value>
	<value condition="!String.IsEmpty(ListItem.AddonVersion) + [Window.IsActive(programs) | Container.Content(Addons)]">$INFO[ListItem.AddonVersion]</value>
</variable>

<variable name="viewglobal_value_fileinfo2_title">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Artist)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[557]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Genre)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Album ) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">[COLOR=TextColor2]$LOCALIZE[558]:[/COLOR]</value>
	<value condition="[Window.IsActive(programs) | Container.Content(Addons)]">[COLOR=TextColor2]$LOCALIZE[126]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_fileinfo2_label">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Artist)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Property(Album_Artist)]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Genre)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Genre)]</value>
	<value condition="!String.IsEmpty(ListItem.Album ) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">$INFO[ListItem.Album]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Addon.Status)) + [Container.Content(Addons) | Window.IsActive(programs)]">$INFO[ListItem.Property(Addon.Status)]</value>
</variable>

<variable name="viewglobal_value_fileinfo3_title">
	<value condition="!String.IsEmpty(ListItem.Genre) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Style)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[176]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Duration) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">[COLOR=TextColor2]$LOCALIZE[180]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.AddonCreator) + [Window.IsActive(programs) | Container.Content(Addons)]">[COLOR=TextColor2]$LOCALIZE[31065]:[/COLOR] </value>
	<value></value>
</variable>

<variable name="viewglobal_value_fileinfo3_label">
	<value condition="!String.IsEmpty(ListItem.Genre) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Genre]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Style)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Style)]</value>
	<value condition="!String.IsEmpty(ListItem.Duration)  + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">$INFO[ListItem.Duration,, $LOCALIZE[31026]]</value>
	<value condition="!String.IsEmpty(ListItem.AddonCreator) + [Container.Content(Addons) | Window.IsActive(programs)]">$INFO[ListItem.AddonCreator]</value>
	<value></value>
</variable>

<variable name="viewglobal_value_fileinfo4_title">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Theme)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[21895]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Mood)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[175]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Genre) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">[COLOR=TextColor2]$LOCALIZE[135]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.AddonSummary) + [Window.IsActive(programs) | Container.Content(Addons)]">[COLOR=TextColor2]$LOCALIZE[21821]:[/COLOR]</value>
	<value></value>
</variable>

<variable name="viewglobal_value_fileinfo4_label">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Theme)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Property(Album_Theme)]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Mood)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Mood)]</value>
	<value condition="!String.IsEmpty(ListItem.Genre) + [Container.Content(songs) | String.Contains(Container.FolderPath,musicdb://singles)]">$INFO[ListItem.Genre]</value>
	<value condition="!String.IsEmpty(ListItem.AddonSummary) + [Container.Content(Addons) | Window.IsActive(programs)]">$INFO[ListItem.AddonSummary]</value>
</variable>

<variable name="viewglobal_value_fileinfo5_title">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Mood)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[175]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Formed)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[21894]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.AddonType) + [Window.IsActive(programs) | Container.Content(Addons)]">[COLOR=TextColor2]$LOCALIZE[21866]:[/COLOR]</value>
</variable>

<variable name="viewglobal_value_fileinfo5_label">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Mood)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Property(Album_Mood)]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Formed)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Formed)]</value>
	<value condition="!String.IsEmpty(ListItem.AddonType) + [Container.Content(Addons) | Window.IsActive(programs)]">$INFO[ListItem.AddonType]</value>
</variable>

<variable name="viewglobal_value_fileinfo6_title">
	<value condition="[Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[176]:[/COLOR]</value>
	<value condition="Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[21896]:[/COLOR]</value>
	<value></value>
</variable>

<variable name="viewglobal_value_fileinfo6_label">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Style)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Property(Album_Style)]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Disbanded)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Disbanded)]</value>
</variable>

<variable name="viewglobal_value_fileinfo7_title">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Label)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">[COLOR=TextColor2]$LOCALIZE[21899]:[/COLOR]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Born)) + Container.Content(artists)">[COLOR=TextColor2]$LOCALIZE[21893]/$LOCALIZE[21897]:[/COLOR]</value>
	<value></value>
</variable>

<variable name="viewglobal_value_fileinfo7_label">
	<value condition="!String.IsEmpty(ListItem.Property(Album_Label)) + [Container.Content(albums) | String.Contains(Container.FolderPath,musicdb://recentlyaddedalbums) | String.Contains(Container.FolderPath,musicdb://recentlyplayedalbums)]">$INFO[ListItem.Property(Album_Label)]</value>
	<value condition="!String.IsEmpty(ListItem.Property(Artist_Born)) + !String.IsEmpty(ListItem.Property(Artist_Died)) + Container.Content(artists)">$INFO[ListItem.Property(Artist_Born)]$INFO[ListItem.Property(Artist_Died), / ]</value>
	<value></value>
</variable>
	
<variable name="videocontent_similarlabel">
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Comedy) | String.Contains(ListItem.Genre,Sitcom) | String.Contains(ListItem.Genre,Komödie)]">Comedy</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Family) | String.Contains(ListItem.Genre,Familien) | String.Contains(ListItem.Genre,Kinder) | String.Contains(ListItem.Genre,Kids)]">Family</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,CSI) | String.Contains(ListItem.Genre,Crime) | String.Contains(ListItem.Genre,Krimi) | String.Contains(ListItem.Genre,Agenten)]">Crime</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Sci-Fi) | String.Contains(ListItem.Genre,fiction) | String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Stargate) | String.Contains(ListItem.Genre,Marvel)]">Science fiction</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Animation) | String.Contains(ListItem.Genre,Anime) | String.Contains(ListItem.Genre,Zeichentrick)]">Animation</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Musik) | String.Contains(ListItem.Genre,Music) | String.Contains(ListItem.Genre,Musical)]">Music</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Mystic) | String.Contains(ListItem.Genre,Thrill) | String.Contains(ListItem.Genre,Mystery) | String.Contains(ListItem.Genre,Fantasy) | String.Contains(ListItem.Genre,Thriller)]">Mystery</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Action)">Action</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Kampfsport) | String.Contains(ListItem.Genre,Martial) | String.Contains(ListItem.Genre,Ninja)]">Martial Arts</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Abenteuer) | String.Contains(ListItem.Genre,Adventure)]">Adventure</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">Nature</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Dokumenation) | String.Contains(ListItem.Genre,Doku) | String.Contains(ListItem.Genre,Dokumentary) | String.Contains(ListItem.Genre,National) | String.Contains(ListItem.Genre,Nature)]">Dokumentary</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Romatik) | String.Contains(ListItem.Genre,Romance)]">Romance</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Drama)">Drama</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Sport) | String.Contains(ListItem.Genre,Sports) | String.Contains(ListItem.Genre,Boxer) | String.Contains(ListItem.Genre,Boxing) | String.Contains(ListItem.Genre,Football) | String.Contains(ListItem.Genre,Basketball) | String.Contains(ListItem.Genre,Baseball)]">Sport</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Krieg) | String.Contains(ListItem.Genre,War)]">War</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Historie) | String.Contains(ListItem.Genre,History) | String.Contains(ListItem.Genre,Monumental) | String.Contains(ListItem.Genre,Classic) | String.Contains(ListItem.Genre,Klassik) | String.Contains(ListItem.Genre,Film-Noir)]">History</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Horror) | String.Contains(ListItem.Genre,Zombies) | String.Contains(ListItem.Genre,Splatter)]">Horror</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,DC) | String.Contains(ListItem.Genre,DC Comic)]">DC Comics</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Fantasy)">Fantasy</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Indie)">Indie</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Marvel)">Marvel</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Religion)">Religion</value>
	<value condition="!ListItem.IsCollection + [String.Contains(ListItem.Genre,Superhelden) | String.Contains(ListItem.Genre,Superheroes)]">Superheroes</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Thriller)">Thriller</value>
	<value condition="!ListItem.IsCollection + String.Contains(ListItem.Genre,Western)">Western</value>

	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Comedy) | String.Contains(Window(home).Property(Set.Movies.Genre),Sitcom) | String.Contains(Window(home).Property(Set.Movies.Genre),Komödie)]">Comedy</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Family) | String.Contains(Window(home).Property(Set.Movies.Genre),Familien) | String.Contains(Window(home).Property(Set.Movies.Genre),Kinder) | String.Contains(Window(home).Property(Set.Movies.Genre),Kids)]">Familienfilme</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),CSI) | String.Contains(Window(home).Property(Set.Movies.Genre),Crime) | String.Contains(Window(home).Property(Set.Movies.Genre),Krimi) | String.Contains(Window(home).Property(Set.Movies.Genre),Agenten)]">Krimis</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Sci-Fi) | String.Contains(Window(home).Property(Set.Movies.Genre),fiction) | String.Contains(Window(home).Property(Set.Movies.Genre),Superhelden) | String.Contains(Window(home).Property(Set.Movies.Genre),Stargate) | String.Contains(Window(home).Property(Set.Movies.Genre),Marvel)]">Science fiction</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Animation) | String.Contains(Window(home).Property(Set.Movies.Genre),Anime) | String.Contains(Window(home).Property(Set.Movies.Genre),Zeichentrick)]">Animation</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Musik) | String.Contains(Window(home).Property(Set.Movies.Genre),Music) | String.Contains(Window(home).Property(Set.Movies.Genre),Musical)]">Music</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Mystic) | String.Contains(Window(home).Property(Set.Movies.Genre),Thrill) | String.Contains(Window(home).Property(Set.Movies.Genre),Mystery) | String.Contains(Window(home).Property(Set.Movies.Genre),Fantasy) | String.Contains(Window(home).Property(Set.Movies.Genre),Thriller)]">Mystery</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Action)">Action</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Kampfsport) | String.Contains(Window(home).Property(Set.Movies.Genre),Martial) | String.Contains(Window(home).Property(Set.Movies.Genre),Ninja)]">Martial Arts</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Abenteuer) | String.Contains(Window(home).Property(Set.Movies.Genre),Adventure)]">Adventure</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),National) | String.Contains(Window(home).Property(Set.Movies.Genre),Nature)]">Nature</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Dokumenation) | String.Contains(Window(home).Property(Set.Movies.Genre),Doku) | String.Contains(Window(home).Property(Set.Movies.Genre),Dokumentary) | String.Contains(Window(home).Property(Set.Movies.Genre),National) | String.Contains(Window(home).Property(Set.Movies.Genre),Nature)]">Dokumentary</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Romatik) | String.Contains(Window(home).Property(Set.Movies.Genre),Romance)]">Romance</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Drama)">Drama</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Sport) | String.Contains(Window(home).Property(Set.Movies.Genre),Sports) | String.Contains(Window(home).Property(Set.Movies.Genre),Boxer) | String.Contains(Window(home).Property(Set.Movies.Genre),Boxing) | String.Contains(Window(home).Property(Set.Movies.Genre),Football) | String.Contains(Window(home).Property(Set.Movies.Genre),Basketball) | String.Contains(Window(home).Property(Set.Movies.Genre),Baseball)]">Sport</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Krieg) | String.Contains(Window(home).Property(Set.Movies.Genre),War)]">War</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Historie) | String.Contains(Window(home).Property(Set.Movies.Genre),History) | String.Contains(Window(home).Property(Set.Movies.Genre),Monumental) | String.Contains(Window(home).Property(Set.Movies.Genre),Classic) | String.Contains(Window(home).Property(Set.Movies.Genre),Klassik) | String.Contains(Window(home).Property(Set.Movies.Genre),Film-Noir)]">History</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Horror) | String.Contains(Window(home).Property(Set.Movies.Genre),Zombies) | String.Contains(Window(home).Property(Set.Movies.Genre),Splatter)]">Horror</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),DC) | String.Contains(Window(home).Property(Set.Movies.Genre),DC Comic)]">DC Comics</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Fantasy)">Fantasy</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Indie)">Indie</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Marvel)">Marvel</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Religion)">Religion</value>
	<value condition="ListItem.IsCollection + [String.Contains(Window(home).Property(Set.Movies.Genre),Superhelden) | String.Contains(Window(home).Property(Set.Movies.Genre),Superheroes)]">Superheroes</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Thriller)">Thriller</value>
	<value condition="ListItem.IsCollection + String.Contains(Window(home).Property(Set.Movies.Genre),Western)">Western</value>
</variable>

<!-- Lowlist/Rightlist Infolabel Focus line2 -->
<variable name="viewglobal_listinfofocus">
	<value condition="Container.Content(movies) + !ListItem.IsCollection + Control.IsVisible(51)">$INFO[ListItem.Year,, ]$INFO[ListItem.Duration,, $LOCALIZE[31026]] $INFO[ListItem.Director, $LOCALIZE[20339]: ,]</value><!-- lowlist movies -->
	<value condition="Container.Content(movies) + !ListItem.IsCollection + Control.IsVisible(58)">$INFO[ListItem.Year,, ]$INFO[ListItem.Duration,, $LOCALIZE[31026]] $INFO[ListItem.Director, $LOCALIZE[20339]: ,]</value><!-- wall movies -->
	<value condition="Container.Content(movies) + !ListItem.IsCollection + Control.IsVisible(56)">$INFO[ListItem.Director, $LOCALIZE[20339]: ,]</value><!-- rightlist movies -->
	<value condition="Container.Content(movies) + !ListItem.IsCollection + Control.IsVisible(66)">$INFO[ListItem.Director, $LOCALIZE[20339]: ,]</value><!-- simplelist movies -->
	<value condition="ListItem.IsCollection">$INFO[ListItem.Year]</value><!-- sets -->
	<value condition="Container.Content(tvshows) + Control.IsVisible(51)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(TotalSeasons),$LOCALIZE[33054]: , - ]$INFO[ListItem.Episode,$LOCALIZE[20360]: ,]</value><!-- lowlist -->
	<value condition="Container.Content(tvshows) + Control.IsVisible(58)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(TotalSeasons),$LOCALIZE[33054]: , - ]$INFO[ListItem.Episode,$LOCALIZE[20360]: ,]</value><!-- wall -->
	<value condition="Container.Content(tvshows) + Control.IsVisible(56)">$INFO[ListItem.Year]</value><!-- rightlist -->
	<value condition="Container.Content(tvshows) + Control.IsVisible(66)">$INFO[ListItem.Year]</value><!-- simplelist -->
	<value condition="Container.Content(seasons) + !String.IsEmpty(ListItem.Episode)">$INFO[ListItem.Year,, - ]$INFO[ListItem.TVShowTitle]</value><!-- seasons -->
	<value condition="Container.Content(episodes) + Control.IsVisible(51)">$VAR[viewglobal_video_dateprefix]$VAR[viewglobal_video_date,, - ]$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391]]</value><!-- lowlist episodes -->
	<value condition="Container.Content(episodes) + Control.IsVisible(56)">$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391]]</value><!-- rightlist episodes -->
	<value condition="Container.Content(episodes) + Control.IsVisible(66)">$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391]]</value><!-- simplelist episodes -->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[578])]">$INFO[ListItem.Genre]</value><!-- album Artist/Year-->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[562])]">$INFO[ListItem.Artist]</value><!-- album Artist/Year-->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[570])]">$INFO[ListItem.Year,, ]$INFO[ListItem.Artist]</value><!-- album hinzugefuegt am-->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[567])]">$INFO[ListItem.Year,, ]$INFO[ListItem.Artist]</value><!-- album Abspielzaehler-->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[36918])]">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(Album_Label), - $LOCALIZE[21899]: ,]</value><!-- album album-->
	<value condition="Container.Content(albums) + [String.IsEqual(Container.SortMethod,$LOCALIZE[36916])]">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(Album_Label), - $LOCALIZE[21899]: ,]</value><!-- album interpret-->
	<value condition="Container.Content(albums)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(Album_Label),$LOCALIZE[21899]: ,]</value>
	<value condition="Container.Content(artists)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(Artist_YearsActive),$LOCALIZE[21898]: ,]</value><!-- YearsActive/Artists -->
	<value condition="Container.Content(songs)">$INFO[ListItem.Duration,, $LOCALIZE[12391]]</value><!-- song  -->
	<value condition="Window.IsActive(programs) | Container.Content(addons)">$INFO[ListItem.AddonVersion,$LOCALIZE[31089]: , ]$INFO[ListItem.AddonCreator,$LOCALIZE[21863]: ,]</value>
	<value condition="Window.IsActive(pictures) + String.IsEmpty(ListItem.Year)">$INFO[ListItem.Year,, ]$INFO[ListItem.PictureAuthor, - $LOCALIZE[21863] , ]$INFO[ListItem.PictureResolution,$LOCALIZE[31083]: ,]</value>
</variable>

<!-- ####mynav info includes ####-->
<!-- mynav topinfo language/subtitle -->
<include name="viewglobal_video_languages">
	<control type="image">
		<left>-15</left>
		<top>-3</top>
		<width>2</width>
		<height>55</height>
		<texture>backgrounds/line_v.png</texture>
		<colordiffuse>$VAR[AC_value_shadow_color]</colordiffuse>
		<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) + !String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
	</control>
	<control type="image">
		<left>-15</left>
		<top>-3</top>
		<width>2</width>
		<height>30</height>
		<texture>backgrounds/line_v.png</texture>
		<colordiffuse>$VAR[AC_value_shadow_color]</colordiffuse>
		<visible>String.IsEmpty(ListItem.Property(SubtitleLanguage.1)) + !String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
	</control>
	<control type="grouplist">
		<left>0</left>
		<top>0</top>
		<width>420</width>
		<height>30</height>
		<align>left</align>
		<itemgap>10</itemgap>
		<orientation>horizontal</orientation>
		<visible>!String.IsEqual(Control.GetLabel(6789),leer)</visible>
		<!-- Audio -->
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>flags/audiolanguage.png</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
		</control>
		<control type="image" id="6789">
			<width>22</width>
			<height>22</height>
			<texture fallback="leer">resource://resource.images.languageflags.colour/$INFO[ListItem.Property(AudioLanguage.1),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.1))</visible>
		</control>
		<control type="label">
			<width>auto</width>
			<height>22</height>
			<font>SemiNormal</font>
			<align>center</align>
			<label>|</label>
			<textcolor>TextColor2</textcolor>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.2))</visible>
		</control>
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>resource://resource.images.languageflags.colour/$INFO[ListItem.Property(AudioLanguage.2),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.2))</visible>
		</control>
		<control type="label">
			<width>auto</width>
			<height>22</height>
			<font>SemiNormal</font>
			<align>center</align>
			<label>|</label>
			<textcolor>TextColor2</textcolor>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.3))</visible>
		</control>
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>resource://resource.images.languageflags.colour/$INFO[ListItem.Property(AudioLanguage.3),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(AudioLanguage.3))</visible>
		</control>
	</control>
	<control type="grouplist">
		<left>0</left>
		<top>30</top>
		<width>420</width>
		<height>30</height>
		<align>left</align>
		<itemgap>10</itemgap>
		<orientation>horizontal</orientation>
		<visible>!String.IsEqual(Control.GetLabel(6790),leer)</visible>
		<!-- Subtitle -->
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>flags/subtitlelanguage.png</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1))</visible>
		</control>
		<control type="image" id="6790">
			<width>22</width>
			<height>22</height>
			<texture fallback="leer">resource://resource.images.languageflags.colour/$INFO[ListItem.Property(SubtitleLanguage.1),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.1))</visible>
		</control>
		<control type="label">
			<width>auto</width>
			<height>22</height>
			<font>SemiNormal</font>
			<align>center</align>
			<label>|</label>
			<textcolor>TextColor2</textcolor>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))</visible>
		</control>
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>resource://resource.images.languageflags.colour/$INFO[ListItem.Property(SubtitleLanguage.2),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.2))</visible>
		</control>
		<control type="label">
			<width>auto</width>
			<height>22</height>
			<font>SemiNormal</font>
			<align>center</align>
			<label>|</label>
			<textcolor>TextColor2</textcolor>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.3))</visible>
		</control>
		<control type="image">
			<width>22</width>
			<height>22</height>
			<texture>resource://resource.images.languageflags.colour/$INFO[ListItem.Property(SubtitleLanguage.3),,.png]</texture>
			<aspectratio>keep</aspectratio>
			<visible>!String.IsEmpty(ListItem.Property(SubtitleLanguage.3))</visible>
		</control>
	</control>
</include>

<!-- mynav sortletter -->
<include name="viewglobal_sortletter">
	<control type="group">
		<width>330</width>
		<height>232</height>
		<include>animation_vhoc_fade</include>
		<animation effect="slide" end="1100,180" time="0" condition="Control.IsVisible(55)">Conditional</animation><!-- Viewsroot -->
		<animation effect="slide" end="1100,180" time="0" condition="Control.IsVisible(50)">Conditional</animation><!-- ViewsFileMode -->
		<animation effect="slide" end="570,550" time="0" condition="Control.IsVisible(51)">Conditional</animation><!-- View51LowList -->
		<animation effect="slide" end="605,330" time="0" condition="Control.IsVisible(52)">Conditional</animation><!-- View52GenreBanner -->
		<animation effect="slide" end="605,430" time="0" condition="Control.IsVisible(53)">Conditional</animation><!-- View53BannerInfo -->
		<animation effect="slide" end="640,150" time="0" condition="Control.IsVisible(54)">Conditional</animation><!-- View54ExtendedList -->
		<animation effect="slide" end="1100,180" time="0" condition="Control.IsVisible(56)">Conditional</animation><!-- Views56Rightlist -->
		<animation effect="slide" end="1055,470" time="0" condition="Control.IsVisible(57)">Conditional</animation><!-- View57category -->
		<animation effect="slide" end="640,470" time="0" condition="Control.IsVisible(58)">Conditional</animation><!-- View58Wall -->
		<animation effect="slide" end="400,480" time="0" condition="Control.IsVisible(60) + String.IsEqual(Skin.String(Posterlistpanel),aus)">Conditional</animation><!-- View60Poster -->
		<animation effect="slide" end="400,380" time="0" condition="Control.IsVisible(60) + String.IsEmpty(Skin.String(Posterlistpanel))">Conditional</animation><!-- View60Poster -->
		<animation effect="slide" end="605,480" time="0" condition="Control.IsVisible(64)">Conditional</animation><!-- View64LandScapeX -->
		<animation effect="slide" end="1055,470" time="0" condition="Control.IsVisible(65)">Conditional</animation><!-- View65Set -->
		<animation effect="slide" end="605,550" time="0" condition="Control.IsVisible(66)">Conditional</animation><!-- View66SimpleList -->
		<animation effect="fade" start="0" end="100" time="100">Visible</animation>
		<animation effect="fade" start="100" end="0" time="500" delay="200">Hidden</animation>
		<visible>[Container.Scrolling | Control.HasFocus(80)] + [String.IsEqual(Container.SortMethod,$LOCALIZE[551]) | String.IsEqual(Container.SortMethod,$LOCALIZE[561]) | String.IsEqual(Container.SortMethod,$LOCALIZE[558]) | String.IsEqual(Container.SortMethod,$LOCALIZE[557]) | String.IsEqual(Container.SortMethod,$LOCALIZE[556])]</visible>
		<control type="image">
			<width>70</width>
			<height>70</height>
			<texture colordiffuse="ACSkinColor">backgrounds/sortletter.png</texture>
		</control>
		<control type="label">
			<width>70</width>
			<height>70</height>
			<align>center</align>
			<label>$INFO[ListItem.SortLetter]</label>
			<textcolor>TextColorFocus</textcolor>
			<font>SemiLarge</font>
		</control>
	</control>
</include>

<!-- ####musicplalisteditor inaktiv button color - bei leerer liste trotzdem kein invalidcolor aus dem core ####-->
<variable name="viewmusicplaylisteditor_emptylistcolor">
	<value condition="!Integer.IsGreater(Container(100).NumItems,0)">TextColor3</value>
	<value>TextColor1</value>
</variable>

<!-- Help Numberinglabel Position Slot -->
<include name="viewglobal_setting_slotnumber">
	<font>ViewsettingPosition</font>
	<align>center</align>
	<aligny>center</aligny>
	<textcolor>TextColorFocus</textcolor>
	<animation effect="fade" start="50" end="50" time="0" condition="true">Conditional</animation>
</include>

<!-- ####Viewchange select menue ####-->
<include name="viewglobal_viewtypeselection"><!-- view selection menue id9032 -->
	<control type="group">
		<include>animation_topdialog_popup</include>
		<visible allowhiddenfocus="true">ControlGroup(9033).HasFocus</visible>
		<control type="image">
			<top>-100</top>
			<width>1280</width>
			<height>212</height>
			<texture colordiffuse="ACSkinColor">backgrounds/background-homeinfo-overlay.png</texture>
		</control>
		<control type="group" id="9033">
			<top>30</top>
			<control type="button" id="90321">
				<description>left</description>
				<left>100</left>
				<top>10</top>
				<width>30</width>
				<height>60</height>
				<texturefocus colordiffuse="TextColorFocus" flipx="true">arrows/arrow_settings.png</texturefocus>
				<texturenofocus colordiffuse="TextColorFocus" flipx="true">arrows/arrow_settings.png</texturenofocus>
				<label>-</label>
				<onunfocus>ClearProperty(Viewtypepreview,home)</onunfocus>
				<onfocus>SetProperty(Viewtypepreview,on,home)</onfocus>
				<onleft>noop</onleft>
				<onright>noop</onright>
				<onup>SetFocus(50)</onup>
				<ondown>SetFocus(50)</ondown>
				<onback>SetFocus(50)</onback>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp)">skin.reset(FilmViewtype)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(FilmViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(FilmViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">skin.setstring(FilmViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(FilmViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(FilmViewtype,Wall)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">skin.setstring(FilmViewtype,Poster)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">skin.setstring(FilmViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.setstring(FilmViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">skin.reset(FilmViewtype)</onclick>
				<onclick condition="Container.Content(movies) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp)">skin.reset(PLS_FilmViewtype)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(PLS_FilmViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(PLS_FilmViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">skin.setstring(PLS_FilmViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(PLS_FilmViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(FilmViewtype,Wall)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">skin.setstring(FilmViewtype,Poster)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">skin.setstring(PLS_FilmViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.setstring(PLS_FilmViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">skin.reset(PLS_FilmViewtype)</onclick>
				<onclick condition="Container.Content(movies) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(sets)">skin.reset(SetViewtype)</onclick>
				<onclick condition="Container.Content(sets)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(50)">skin.setstring(SetViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(51)">skin.setstring(SetViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(53)">skin.setstring(SetViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(54)">skin.setstring(SetViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(56)">skin.setstring(SetViewtype,Wall)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(58)">skin.setstring(SetViewtype,Poster)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(60)">skin.setstring(SetViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(64)">skin.setstring(SetViewtype,Sets)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(64)">Container.SetViewMode(65)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(65)">skin.setstring(SetViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(65)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(66)">skin.reset(SetViewtype)</onclick>
				<onclick condition="Container.Content(sets) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
								
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp)">skin.reset(TVViewtype)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(TVViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(TVViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">skin.setstring(TVViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(TVViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(TVViewtype,Wall)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">skin.setstring(TVViewtype,Poster)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">skin.setstring(TVViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.setstring(TVViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">skin.reset(TVViewtype)</onclick>
				<onclick condition="Container.Content(tvshows) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
				
				
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp)">skin.reset(PLS_TVViewtype)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(PLS_TVViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(PLS_TVViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">skin.setstring(PLS_TVViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(PLS_TVViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(PLS_TVViewtype,Wall)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">skin.setstring(PLS_TVViewtype,Poster)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">skin.setstring(PLS_TVViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.setstring(PLS_TVViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">skin.reset(PLS_TVViewtype)</onclick>
				<onclick condition="Container.Content(tvshows) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
							
				<onclick condition="Container.Content(seasons)">skin.reset(StaffelViewtype)</onclick>
				<onclick condition="Container.Content(seasons)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(50)">skin.setstring(StaffelViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(51)">skin.setstring(StaffelViewtype,BannerInfo)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(51)">Container.SetViewMode(53)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(53)">skin.setstring(StaffelViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(53)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(54)">skin.setstring(StaffelViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(56)">skin.setstring(StaffelViewtype,Poster)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(56)">Container.SetViewMode(60)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(60)">skin.setstring(StaffelViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(64)">skin.setstring(StaffelViewtype,Simplelist)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(64)">Container.SetViewMode(66)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(66)">skin.reset(StaffelViewtype)</onclick>
				<onclick condition="Container.Content(seasons) + Control.IsVisible(66)">Container.SetViewMode(50)</onclick>
				
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp)">skin.reset(EpisodeViewtype)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(EpisodeViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(EpisodeViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(EpisodeViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(EpisodeViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.reset(EpisodeViewtype)</onclick>
				<onclick condition="Container.Content(episodes) + !String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(50)</onclick>
				
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp)">skin.reset(PLS_EpisodeViewtype)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">skin.setstring(PLS_EpisodeViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">skin.setstring(PLS_EpisodeViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(51)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">skin.setstring(PLS_EpisodeViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">skin.setstring(PLS_EpisodeViewtype,LandScapeX)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(56)">Container.SetViewMode(64)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">skin.reset(PLS_EpisodeViewtype)</onclick>
				<onclick condition="Container.Content(episodes) + String.Contains(Container.Folderpath,xsp) + Control.IsVisible(64)">Container.SetViewMode(50)</onclick>
				
				
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres)">skin.reset(GenreViewtype)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres)">Container.SetViewMode(50)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(50)">skin.setstring(GenreViewtype,Lowlist)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(51)">skin.setstring(GenreViewtype,GenreBanner)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(51)">Container.SetViewMode(52)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(52)">skin.setstring(GenreViewtype,BannerInfo)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(52)">Container.SetViewMode(53)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(53)">skin.setstring(GenreViewtype,Rightlist)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(53)">Container.SetViewMode(56)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(56)">skin.setstring(GenreViewtype,Wall)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(56)">Container.SetViewMode(58)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(58)">skin.setstring(GenreViewtype,Poster)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(58)">Container.SetViewMode(60)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(60)">skin.setstring(GenreViewtype,LandScapeX)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(60)">Container.SetViewMode(64)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(64)">skin.reset(GenreViewtype)</onclick>
				<onclick condition="Window.IsVisible(videos) + Container.Content(genres) + Control.IsVisible(64)">Container.SetViewMode(50)</onclick>
				
				<onclick condition="Container.Content(albums)">skin.reset(AlbumViewtype)</onclick>
				<onclick condition="Container.Content(albums)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(50)">skin.setstring(AlbumViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(51)">skin.setstring(AlbumViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(51)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(54)">skin.setstring(AlbumViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(56)">skin.reset(AlbumViewtype)</onclick>
				<onclick condition="Container.Content(albums) + Control.IsVisible(56)">Container.SetViewMode(50)</onclick>
				
				<onclick condition="Container.Content(artists)">skin.reset(ArtistViewtype)</onclick>
				<onclick condition="Container.Content(artists)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(50)">skin.setstring(ArtistViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(51)">skin.setstring(ArtistViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(51)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(54)">skin.setstring(ArtistViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(56)">skin.reset(ArtistViewtype)</onclick>
				<onclick condition="Container.Content(artists) + Control.IsVisible(56)">Container.SetViewMode(50)</onclick>

				<onclick condition="Container.Content(songs)">skin.reset(SongViewtype)</onclick>
				<onclick condition="Container.Content(songs)">Container.SetViewMode(50)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(50)">skin.setstring(SongViewtype,Lowlist)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(50)">Container.SetViewMode(51)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(51)">skin.setstring(SongViewtype,ExtendedList)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(51)">Container.SetViewMode(54)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(54)">skin.setstring(SongViewtype,Rightlist)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(54)">Container.SetViewMode(56)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(56)">skin.reset(SongViewtype)</onclick>
				<onclick condition="Container.Content(songs) + Control.IsVisible(56)">Container.SetViewMode(50)</onclick>
				<animation effect="fade" end="50" time="400" reversible="true" condition="true">Conditional</animation>
			</control>
			<control type="label">
				<left>150</left>
				<top>-10</top>
				<width>990</width>
				<height>100</height>
				<align>center</align>
				<aligny>center</aligny>
				<font>ViewsettingSelection</font>
				<label>$INFO[Container.Viewmode]</label>
				<textcolor>TextColorFocus</textcolor>
				<animation effect="fade" end="50" time="400" reversible="true" condition="true">Conditional</animation>
			</control>
			<control type="button" id="90322">
				<description>left</description>
				<left>1140</left>
				<top>10</top>
				<width>30</width>
				<height>60</height>
				<texturefocus colordiffuse="TextColorFocus">arrows/arrow_settings.png</texturefocus>
				<texturenofocus colordiffuse="TextColorFocus">arrows/arrow_settings.png</texturenofocus>
				<label>-</label>
				<onfocus>SetFocus(90321)</onfocus>
				<onclick>noop</onclick>
				<animation effect="fade" end="50" time="400" reversible="true" condition="true">Conditional</animation>
			</control>
		</control>
	</control>
	<control type="group">
		<visible>ControlGroup(9033).HasFocus</visible>
		<include>animation_topdialog_popup</include>
		<include>dialog_bar</include>
		<control type="grouplist">
			<top>5</top>
			<left>15</left>
			<width>1250</width>
			<height>25</height>
			<align>justify</align>
			<itemgap>10</itemgap>
			<orientation>horizontal</orientation>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>E</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(FilmViewtype)]</label>
				<visible>Container.content(movies) + String.Contains(Container.FolderPath,xsp) | !Container.content(movies)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(FilmViewtype)]</label>
				<visible>Container.content(movies) + !String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Ǻ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_FilmViewtype)]</label>
				<visible>Container.content(movies) + !String.Contains(Container.FolderPath,xsp) | !Container.content(movies)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_FilmViewtype)]</label>
				<visible>Container.content(movies) + String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>K</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(SetViewtype)]</label>
				<visible>!Container.content(sets)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(SetViewtype)]</label>
				<visible>Container.content(sets)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>D</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(TVViewtype)]</label>
				<visible>Container.content(tvshows) + String.Contains(Container.FolderPath,xsp) | !Container.content(tvshows)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(TVViewtype)]</label>
				<visible>Container.content(tvshows) + !String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Ǻ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_TVViewtype)]</label>
				<visible>Container.content(tvshows) + !String.Contains(Container.FolderPath,xsp) | !Container.content(tvshows)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_TVViewtype)]</label>
				<visible>Container.content(tvshows) + String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>D</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(StaffelViewtype)]</label>
				<visible>!Container.content(seasons)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(StaffelViewtype)]</label>
				<visible>Container.content(seasons)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>A</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(EpisodeViewtype)]</label>
				<visible>Container.content(episodes) + String.Contains(Container.FolderPath,xsp) | !Container.content(episodes)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(EpisodeViewtype)]</label>
				<visible>Container.content(episodes) + !String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Ǻ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_EpisodeViewtype)]</label>
				<visible>Container.content(episodes) + !String.Contains(Container.FolderPath,xsp) | !Container.content(episodes)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(PLS_EpisodeViewtype)]</label>
				<visible>Container.content(episodes) + String.Contains(Container.FolderPath,xsp)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Q</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(GenreViewtype)]</label>
				<visible>!Container.content(genres)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<textcolor>ACSkinColor</textcolor>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(GenreViewtype)]</label>
				<visible>Container.content(genres)</visible>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Ǵ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(AlbumViewtype)]</label>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>ǵ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(ArtistViewtype)]</label>
			</control>
			<control type="label">
				<height>25</height>
				<font>Icons-Bottombar-Small</font>
				<include>viewstatus_topbar_label</include>
				<label>Ƕ</label>
			</control>
			<control type="label">
				<height>25</height>
				<include>viewstatus_topbar_label</include>
				<label fallback="Filelist">$INFO[Skin.String(SongViewtype)]</label>
			</control>
		</control>
	</control>
</include>

<!-- ####top bar view setting status  ####-->
<include name="viewstatus_topbar_button">
	<width>15</width>
	<height>15</height>
	<font>RegularSmall</font>
	<textoffsety>0</textoffsety>
	<textoffsetx>70</textoffsetx>
</include>

<include name="viewstatus_topbar_label">
	<width>auto</width>
	<height>15</height>
	<align>left</align>
	<font>RegularSmall</font>
	<textcolor>TextColor1</textcolor>
	<disabledcolor>TextColor1</disabledcolor>
</include>

<include name="viewglobal_topbar_viewstatusinfo">
<control type="group">
	<visible>![Window.IsVisible(DialogConfirm.xml) | Window.IsVisible(DialogNotification.xml) | Window.IsVisible(volumebar) | Window.IsVisible(extendedprogressdialog)]</visible>
	<visible>![String.IsEqual(Window(1113).Property(SettingsCategory),videoinfo) | Window.IsVisible(tvguide) | Window.IsVisible(radioguide) | Window.IsVisible(radiochannels) | Window.IsVisible(tvchannels) | String.IsEqual(Window(1113).Property(SettingsCategory),VideoOSD)  | String.IsEqual(Window(1113).Property(SettingsCategory),MusicOSD)  | String.IsEqual(Window(1113).Property(SettingsCategory),Widgetchannels) | String.IsEqual(Window(1113).Property(SettingsCategory),view51pvr) | String.IsEqual(Window(1113).Property(SettingsCategory),viewepg)]</visible>
	<include>dialog_bar</include>
	<control type="grouplist">
		<top>3</top>
		<left>15</left>
		<width>50</width>
		<height>25</height>
		<align>left</align>
		<itemgap>10</itemgap>
		<orientation>horizontal</orientation>
		<control type="label">
			<height>25</height>
			<font>Icons-Bottombar-Small</font>
			<include>viewstatus_topbar_label</include>
			<label>È</label>
		</control>
	</control>
	<!-- ohne status bei kategorien/sets -->
	<control type="grouplist">
		<left>0</left>
		<top>11</top>
		<width>1250</width>
		<height>100</height>
		<onleft>noop</onleft>
		<onright>noop</onright>
		<onup>noop</onup>
		<ondown>noop</ondown>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewSets) | String.IsEqual(Window(1113).Property(SettingsCategory),ViewCategory)</visible>
		<orientation>horizontal</orientation>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31339]</label>
		</control>
		<control type="button">
			<description>Dateien</description>
			<label>-</label>
			<onclick>noop</onclick>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</texturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31856]</label>
			<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewSets)</visible>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31224]</label>
			<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewCategory)</visible>
		</control>
	</control>
	
	<!-- Lowlist -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>15</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewLowList)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(EpisodeViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_EpisodeViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
		<control type="togglebutton">
			<description>Alben</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(AlbumViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[132]</label>
		</control>
		<control type="togglebutton">
			<description>Interpret</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(ArtistViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[133]</label>
		</control>
		<control type="togglebutton">
			<description>lieder</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SongViewtype),Lowlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[134]</label>
		</control>
	</control>
	<!-- bannerinfo -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewBannerInfo)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),BannerInfo)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
	</control>
	<!-- LandscapeEX -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewLandScapeX)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(EpisodeViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_EpisodeViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),LandScapeX)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
	</control>
	<!-- ExtendedList -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewExtendedList)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(EpisodeViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_EpisodeViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
		<control type="togglebutton">
			<description>Alben</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(AlbumViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[132]</label>
		</control>
		<control type="togglebutton">
			<description>Interpret</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(ArtistViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[133]</label>
		</control>
		<control type="togglebutton">
			<description>lieder</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SongViewtype),ExtendedList)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[134]</label>
		</control>
	</control>
	<!-- SimpleList -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewSimpleList)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(EpisodeViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_EpisodeViewtype),Simplelist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360] (xsp)</label>
		</control>
	</control>
	<!-- RightList -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewRightlist)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(EpisodeViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360]</label>
		</control>
		<control type="togglebutton">
			<description>Episoden playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_EpisodeViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20360] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
		<control type="togglebutton">
			<description>Alben</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(AlbumViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[132]</label>
		</control>
		<control type="togglebutton">
			<description>Interpret</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(ArtistViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[133]</label>
		</control>
		<control type="togglebutton">
			<description>lieder</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SongViewtype),Rightlist)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[134]</label>
		</control>
	</control>
	<!-- Poster -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewPoster)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
	</control>
	<!-- genrebanner -->
	<control type="grouplist">
		<top>11</top>
		<width>1250</width>
		<height>25</height>
		<align>right</align>
		<itemgap>10</itemgap>
		<visible>String.IsEqual(Window(1113).Property(SettingsCategory),ViewGenreBanner)</visible>
		<orientation>horizontal</orientation>
		<control type="togglebutton">
			<description>Filme</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(FilmViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342]</label>
		</control>
		<control type="togglebutton">
			<description>Filme playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_FilmViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[20342] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Sets</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(SetViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31386]</label>
		</control>
		<control type="togglebutton">
			<description>Serien</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(TVViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903]</label>
		</control>
		<control type="togglebutton">
			<description>Serien playliste</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(PLS_TVViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[36903] (xsp)</label>
		</control>
		<control type="togglebutton">
			<description>Staffeln</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(StaffelViewtype),Poster)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31075]</label>
		</control>
		<control type="togglebutton">
			<description>Videogenres</description>
			<label>-</label>
			<altlabel>-</altlabel>
			<onclick>noop</onclick>
			<usealttexture>String.IsEqual(Skin.String(GenreViewtype),GenreBanner)</usealttexture>
			<include>viewstatus_topbar_button</include>
			<texturenofocus colordiffuse="ACViewSettingCustomOffNF">buttons/button_focus.png</texturenofocus>
			<texturefocus colordiffuse="ACViewSettingCustomOffFO">buttons/button_focus.png</texturefocus>
			<alttexturenofocus colordiffuse="ACViewSettingCustomOnNF">buttons/button_focus.png</alttexturenofocus>
			<alttexturefocus colordiffuse="ACViewSettingCustomOnFO">buttons/button_focus.png</alttexturefocus>
		</control>
		<control type="label">
			<include>viewstatus_topbar_label</include>
			<label>$LOCALIZE[31378]</label>
		</control>
	</control>

	
	
	
</control>

</include>

<!-- ####pinboard includes ####-->
<!-- Pinboard Kontextmenue label -->
<variable name="viewglobal_addon_pinboardlabel">
	<value condition="!String.IsEmpty(Skin.String(AddonList1Path)) + !String.IsEmpty(Skin.String(AddonList2Path)) + !String.IsEmpty(Skin.String(AddonList3Path)) + !String.IsEmpty(Skin.String(AddonList4Path)) + !String.IsEmpty(Skin.String(AddonList5Path)) + !String.IsEmpty(Skin.String(AddonList6Path)) + !String.IsEmpty(Skin.String(AddonList7Path)) + !String.IsEmpty(Skin.String(AddonList8Path)) + !String.IsEmpty(Skin.String(AddonList9Path)) + !String.IsEmpty(Skin.String(AddonList10Path))">$LOCALIZE[31374]</value>
	<value>$LOCALIZE[31375]</value>
</variable>


<!-- ####fallbackinfo nonview selected ####-->
<include name="viewglobal_viewselectionerror">
	<control type="group">
		<visible>String.IsEmpty(Container.Viewmode)</visible>
		<control type="button" id="8889">
			<width>1280</width>
			<height>720</height>
			<texturefocus>-</texturefocus>
			<onclick>SetProperty(Viewtypepreview,on,home)</onclick>
			<onclick>SetFocus(90321)</onclick>
			<onup>noop</onup>
			<ondown>noop</ondown>
			<onleft>noop</onleft>
			<onright>noop</onright>
		</control>
		<control type="image">
			<width>1280</width>
			<height>720</height>
			<texture>White.png</texture>
			<colordiffuse>ACBackgroundColor_light</colordiffuse>
			<animation type="Visible" reversible="false">
				<effect type="fade" delay="1500" time="300" start="0" end="100" tween="cubic" easing="out" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="fade" delay="500" time="600" start="100" end="0" tween="cubic" easing="out" />
			</animation>
			<animation type="WindowOpen" reversible="false">
				<effect type="fade" delay="1500" time="300" start="0" end="100" tween="cubic" easing="out" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="fade" delay="500" time="600" start="100" end="0" tween="cubic" easing="out" />
			</animation>
		</control>
		<control type="group">
			<animation type="WindowOpen" reversible="false">
				<effect type="fade" delay="1500" time="600" start="0" end="100" tween="cubic" easing="out" />
			</animation>
			<animation type="WindowClose" reversible="false">
				<effect type="fade" delay="500" time="600" start="100" end="0" tween="cubic" easing="out" />
			</animation>
			<animation type="Visible" reversible="false">
				<effect type="fade" delay="1500" time="600" start="0" end="100" tween="cubic" easing="out" />
			</animation>
			<animation type="Hidden" reversible="false">
				<effect type="fade" delay="500" time="600" start="100" end="0" tween="cubic" easing="out" />
			</animation>
			<!-- Logo -->
			<control type="group">
				<left>0</left>
				<top>0</top>
				<control type="image">
					<left>555</left>
					<top>180</top>
					<width>170</width>
					<height>170</height>
					<texture colordiffuse="ACSkinColor">logo_flex_sw.png</texture>
				 </control>
				 <control type="image">
					<left>555</left>
					<top>180</top>
					<width>170</width>
					<height>170</height>
					<texture colordiffuse="TextColor1">logo_flex_text.png</texture>
				 </control>
			</control>
			<control type="label">
				<description>Titel</description>
				<left>40</left>
				<top>330</top>
				<width>1200</width>
				<height>60</height>
				<font>SemiLarge</font>
				<align>center</align>
				<label>$INFO[Container.ViewCount]$LOCALIZE[31028]!</label>
			</control>
			<control type="textbox">
				<description>Subtitel</description>
				<left>40</left>
				<top>380</top>
				<width>1200</width>
				<include>PlotNormal44</include>
				<textcolor>TextColorSelect</textcolor>
				<font>SemiLarge</font>
				<align>center</align>
				<label>$LOCALIZE[31340]: [B]$INFO[Container.FolderName][/B]</label>
			</control>
			<control type="textbox">
				<description>Subtitel</description>
				<left>40</left>
				<top>420</top>
				<width>1200</width>
				<include>PlotNormal44</include>
				<textcolor>TextColor2</textcolor>
				<align>center</align>
				<label>$LOCALIZE[31341]</label>
			</control>
		</control>
	</control>
</include>

<!-- Rightlist/simplelist Content Infolabel Focus line2 -->
<variable name="viewlist_video_contentinfofocus">
	<value condition="!String.IsEmpty(ListItem.Duration) + !String.IsEmpty(ListItem.Director)">$INFO[ListItem.Year,, ]$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391]  ]$INFO[ListItem.Director, - $LOCALIZE[20339]: ,]</value><!-- movies -->
	<value condition="!String.IsEmpty(ListItem.TotalSeasons)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(TotalSeasons),$LOCALIZE[33054]: , ]$INFO[ListItem.Episode,$LOCALIZE[20360]: ,]</value><!-- tvshows -->
	
	<value condition="!String.IsEmpty(ListItem.Duration)">$INFO[ListItem.Duration,$LOCALIZE[180]: , $LOCALIZE[12391]  ]</value>
	<value condition="!String.IsEmpty(ListItem.DBTYPE)">$INFO[ListItem.Year,, ]$INFO[ListItem.Property(TotalSeasons),$LOCALIZE[33054]: , ]$INFO[ListItem.Episode,$LOCALIZE[20360]: ,]</value><!-- staffel -->
	<value>$INFO[ListItem.Year]</value>
</variable>

</includes>